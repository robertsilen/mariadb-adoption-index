name: Reddit Subscribers

on:
  schedule:
    - cron: '35 2 * * *'  # Runs at 6 AM EET (4 AM UTC) daily
  workflow_dispatch:  # Allows manual trigger from the GitHub Actions UI

jobs:
  fetch-pulls:
    runs-on: ubuntu-latest

    env:
      REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}  
      REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}  
      REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}  
      REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}  
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Reddit Token
        run: python data/reddit_subscribers/get_auth_token.py

      - name: Fetch Reddit Subscribers and Append to CSV
        run: |
          DATE=$(date +%F)
          
          # Store the API response in a variable and check for errors
          RESPONSE=$(curl -v -L -s -A "mariadb script/1.0" -H "Authorization: bearer $REDDIT_TOKEN" https://oauth.reddit.com/r/mariadb/about.json)
          
          # Check if the response contains an error message
          if echo "$RESPONSE" | jq -e '.error' > /dev/null; then
            echo "Error from Reddit API:"
            echo "$RESPONSE" | jq '.'
            exit 1
          fi
          
          # Extract and validate the subscriber count
          VALUE=$(echo "$RESPONSE" | jq '.data.subscribers')
          
          if [ "$VALUE" = "null" ] || [ -z "$VALUE" ]; then
            echo "Error: Failed to get valid subscriber count from Reddit API"
            echo "API Response:"
            echo "$RESPONSE" | jq '.'
            exit 1
          fi
                    
          PATH_TO_CSV="data/reddit_subscribers/daily.csv"

          # Ensure the CSV file exists with the header
          if [ ! -f $PATH_TO_CSV ]; then
            echo "date,reddit_subscribers" > $PATH_TO_CSV
          fi

          # Ensure file ends with newline
          [ -f $PATH_TO_CSV ] && [ "$(tail -c1 $PATH_TO_CSV)" != "" ] && echo "" >> $PATH_TO_CSV

          # Check if the date already exists in the CSV file
          if ! grep -q "$DATE" $PATH_TO_CSV; then
            echo "$DATE,$VALUE" >> $PATH_TO_CSV
          fi

      - name: Install Python dependencies
        run: pip install pandas

      - name: Update monthly.csv with scripts/daily2monthly.py
        run: python scripts/daily2monthly.py reddit_subscribers

      - name: Commit and push
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add -A
          timestamp=$(date -I)
          git commit -m "reddit subscribers ${timestamp}" || exit 0
          git push
